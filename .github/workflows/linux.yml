---
name: Linux

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:

env:
  CTEST_OUTPUT_ON_FAILURE: 1
  CCACHE_VERSION: 4.8.3
  CCACHE_BASEDIR: ${{ github.workspace }}
  CCACHE_DIR: ${{ github.workspace }}/.ccache
  CCACHE_COMPRESS: true
  CCACHE_COMPRESSLEVEL: 6
  CCACHE_MAXSIZE: 1000M
  CPM_SOURCE_CACHE: ${{ github.workspace }}/cpm_modules

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Caching CPM CMake dependencies
        uses: whywaita/actions-cache-s3@v2
        with:
          path: '**/cpm_modules'
          key: ${{ github.workflow }}-cpm-modules-${{ hashFiles('**/CMakeLists.txt', '**/*.cmake') }}
          aws-s3-bucket: ${{ secrets.AWS_S3_BUCKET_NAME }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Update dependencies for JUCE
        run: |
          sudo apt update
          sudo apt install libasound2-dev libjack-jackd2-dev \
              ladspa-sdk \
              libfreetype6-dev \
              libx11-dev libxcomposite-dev libxcursor-dev libxcursor-dev libxext-dev libxinerama-dev libxrandr-dev libxrender-dev \
              libwebkit2gtk-4.0-dev \
              libglu1-mesa-dev mesa-common-dev \
              ccache

      - name: Prepare ccache timestamp
        id: ccache_cache_timestamp
        shell: cmake -P {0}
        run: |
          string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
          message("::set-output name=timestamp::${current_date}")
    
      - name: ccache cache files
        id: ccache_cache
        uses: whywaita/actions-cache-s3@v2
        with:
          path: .ccache
          key: ${ { runner.os } }-ccache-${ { steps.ccache_cache_timestamp.outputs.timestamp } }
          restore-keys: |
            ${ { runner.os } }-ccache-
          aws-s3-bucket: ${{ secrets.AWS_S3_BUCKET_NAME }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: configure
        run: cmake -S . -B build -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=Debug -DBOOST_UT_ENABLE_RUN_AFTER_BUILD=NO -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
      - name: build
        run: cmake --build build -j4

      - name: test
        run: |
          cd build
          ctest --build-config Debug
